#!/bin/bash

CS=${HOME}/.csdb
P=${CS}/pdb
T=${CS}/tdb
PID=$(ps aux | grep -v grep | grep ctags)

default()
{
	# create csdb if not exist
	if [[ ! -d ${CS} ]]; then
		echo "init csdb"
		echo "mkdir ${CS}"
		mkdir ${CS}
		REFER=${CS}/refresh
		touch ${REFER}
		echo "create script ${REFER}"
		echo '#!/bin/bash' >> ${REFER}
		echo '' >> ${REFER}
		echo '# gen db if not exsit' >> ${REFER}
		echo 'if [[ ! -a tdb ]]; then' >> ${REFER}
		echo '	touch tdb' >> ${REFER}
		echo 'fi' >> ${REFER}
		echo 'if [[ ! -a pdb ]]; then' >> ${REFER}
		echo '	touch pdb' >> ${REFER}
		echo 'fi' >> ${REFER}
		echo '' >> ${REFER}
		echo 'PROJECT=$(cat pdb)' >> ${REFER}
		echo 'FILE_TYPE=$(cat tdb)' >> ${REFER}
		echo '' >> ${REFER}
		echo '# gen filedb' >> ${REFER}
		echo 'rm -f cscope.files' >> ${REFER}
		echo 'for p in ${PROJECT}; do' >> ${REFER}
		echo '	for t in ${FILE_TYPE}; do' >> ${REFER}
		echo '		find ${p} -iname *.${t} >> cscope.files' >> ${REFER}
		echo '	done' >> ${REFER}
		echo 'done' >> ${REFER}
		echo '' >> ${REFER}
		echo '# gen ctags' >> ${REFER}
		echo 'ctags $(cat cscope.files)' >> ${REFER}
		echo '' >> ${REFER}
		echo '# gen cscope.out' >> ${REFER}
		echo "sed -i '' 's/\"/\\\"/g;s/\\\\/\\\\\\\\/g;s/^/\"/g;s/$/\"/g' cscope.files" >> ${REFER}
		echo 'cscope -bq' >> ${REFER}
		chmod +x ${REFER}
		echo "install vim plugin"
		VIMDIR=${HOME}/.vim/plugin
		if [[ ! -d ${VIMDIR} ]]; then
			echo "mkdir ${VIMDIR}"
			mkdir -p ${VIMDIR}
		fi
		PLUGIN=${VIMDIR}/cscope.vim
		if [[ ! -f ${PLUGIN} ]]; then
			echo "create plugin ${PLUGIN}"
			touch ${PLUGIN}
			echo 'set cscopetag' >> ${PLUGIN}
			echo 'autocmd BufReadPre,BufRead,BufNew * cscope add ~/.csdb/cscope.out' >> ${PLUGIN}
		fi
	fi

	# refresh csdb
	if [[ -n ${PID} ]]; then
		echo "cscope is running. PID=${PID}"
		exit 0
	fi
	echo "freshing csdb..."
	cd ${CS}
	./refresh
	echo "done."
}

if [[ -z ${1} ]]; then
	default
	exit 0
fi

COM=${1}
shift 1
ARGS=${*}

case ${COM} in
	"p")
		todo ${P} s
		;;
	"ap")
		todo ${P} a ${*}
		;;
	"dp")
		todo ${P} d ${*}
		;;
	"t")
		todo ${T} s
		;;
	"at")
		todo ${T} a ${*}
		;;
	"dt")
		todo ${T} d ${*}
		;;
	*)
		echo -e "" "usage ${0}"\
			"[p]" \
			"[ap <project_name>]" \
			"[dp <project_id>]" \
			"[t]" \
			"[at <type_name>]" \
			"[dt <type_id>]\n" \
			"it would refresh the csdb if no argument provided."
esac
